{"version":3,"names":["mock","jest","beforeAll","mockModule","queryWorkoutSamplesWithAnchor","fn","isHealthDataAvailable","isProtectedDataAvailable","authorizationStatusFor","requestAuthorization","saveQuantitySample","deleteQuantitySample","deleteSamples","disableAllBackgroundDelivery","disableBackgroundDelivery","enableBackgroundDelivery","queryCategorySamplesWithAnchor","queryQuantitySamplesWithAnchor","getBiologicalSex","getBloodType","getDateOfBirth","getFitzpatrickSkinType","getPreferredUnits","getRequestStatusForAuthorization","getWheelchairUse","getWorkoutRoutes","queryCategorySamples","queryCorrelationSamples","queryHeartbeatSeriesSamples","queryHeartbeatSeriesSamplesWithAnchor","queryQuantitySamples","querySources","queryStatisticsForQuantity","queryWorkoutSamples","saveCategorySample","saveCorrelationSample","saveWorkoutSample","subscribeToObserverQuery","unsubscribeQuery","saveWorkoutRoute","getWorkoutPlanById","startWatchAppWithWorkoutConfiguration","workoutSessionMirroringStartHandler","module","NativeModules","ReactNativeHealthkit","NativeEventEmitter"],"sources":["test-setup.ts"],"sourcesContent":["// eslint-disable-next-line import/no-unresolved\nimport { mock, jest, beforeAll } from 'bun:test'\n\nimport type Native from './native-types'\n\nbeforeAll(async () => {\n  const mockModule: typeof Native = {\n    queryWorkoutSamplesWithAnchor: jest.fn(),\n    isHealthDataAvailable: jest.fn(),\n    isProtectedDataAvailable: jest.fn(),\n    authorizationStatusFor: jest.fn(),\n    requestAuthorization: jest.fn(),\n    saveQuantitySample: jest.fn(),\n    deleteQuantitySample: jest.fn(),\n    deleteSamples: jest.fn(),\n    disableAllBackgroundDelivery: jest.fn(),\n    disableBackgroundDelivery: jest.fn(),\n    enableBackgroundDelivery: jest.fn(),\n    queryCategorySamplesWithAnchor: jest.fn(),\n    queryQuantitySamplesWithAnchor: jest.fn(),\n    getBiologicalSex: jest.fn(),\n    getBloodType: jest.fn(),\n    getDateOfBirth: jest.fn(),\n    getFitzpatrickSkinType: jest.fn(),\n    getPreferredUnits: jest.fn(),\n    getRequestStatusForAuthorization: jest.fn(),\n    getWheelchairUse: jest.fn(),\n    getWorkoutRoutes: jest.fn(),\n    queryCategorySamples: jest.fn(),\n    queryCorrelationSamples: jest.fn(),\n    queryHeartbeatSeriesSamples: jest.fn(),\n    queryHeartbeatSeriesSamplesWithAnchor: jest.fn(),\n    queryQuantitySamples: jest.fn(),\n    querySources: jest.fn(),\n    queryStatisticsForQuantity: jest.fn(),\n    queryWorkoutSamples: jest.fn(),\n    saveCategorySample: jest.fn(),\n    saveCorrelationSample: jest.fn(),\n    saveWorkoutSample: jest.fn(),\n    subscribeToObserverQuery: jest.fn(),\n    unsubscribeQuery: jest.fn(),\n    saveWorkoutRoute: jest.fn(),\n    getWorkoutPlanById: jest.fn(),\n    startWatchAppWithWorkoutConfiguration: jest.fn(),\n    workoutSessionMirroringStartHandler: jest.fn(),\n  }\n\n  await mock.module('react-native', () => ({\n    NativeModules: {\n      ReactNativeHealthkit: mockModule,\n    },\n    NativeEventEmitter: jest.fn(),\n  }))\n})\n"],"mappings":"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","ignoreList":[]}